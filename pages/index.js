import * as React from "react";
import Head from "next/head";
import Image from "next/image";
import FeatureServices from "../components/FeatureServices";
import HousesSection from "../components/HousesSection";
import Products from "../components/Products";
import { sanityClient } from "../lib/sanity";
import styles from "../styles/Home.module.css";
import Banner from "../components/Banner";
import Equipo from "../components/Equipo";
import Blog from "../components/Blog";
import { BannerPromo } from "../components/BanerPromo";

export default function Home({data, dataEquipo, posts}) {


  return (
    <React.Fragment>
      <Head>
        <title>Inmobiliaria Don Quijote</title>
        <meta
          name="description"
          content="Generated by Inmobiliaria Don Quijote"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      {/* <Banner /> */}
      <BannerPromo />
      <br />
      <Products />
      <HousesSection data = {data}/>
      <BannerPromo image='/banner2.jpg'  background="bg-bannerColor2"  />
      <FeatureServices />
      <Equipo dataEquipo={dataEquipo} />
      <Blog posts={posts} />

 



    </React.Fragment>
  );
}

const queryHouses = `*[_type == 'houses']{
  _id,
  address,
  bathroom,
  cocinas,
  comedor,
  habitaciones,
 'image': image.asset->url,
  name,
  order,
  parqueadero,
  patios,
  price,
  sala,
  valoracion,
  piscina
}
`;


const queryEquipo = `*[_type == 'equipo']{
  name,
  _id,
  'image': image.asset->url,
  descripcion,
  order
  
}`

const queryBlogData = `*[_type == "post"] | order(publishedAt desc){
  title,
  slug,
  mainImage{
      asset->{
          _id,
          url
      },
      alt
  },
  summary,
  publishedAt,
  'name': author->name,
  'authorImage': author->image
}[0...3]`;

export async function getStaticProps() {

  const data =  await sanityClient.fetch(queryHouses)
  const dataEquipo = await sanityClient.fetch(queryEquipo)
  const dataBlog = await sanityClient.fetch(queryBlogData)

  return {
    props: { data , dataEquipo, posts: dataBlog },
    revalidate: 10,
  };
}
